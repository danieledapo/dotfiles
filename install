#!/usr/bin/env bash

set -euo pipefail

function main() {
    case $1 in
    all)
        install_common
        install_fish
        install_vscode
        install_zed
        install_python
        install_rust
        install_nvim
        install_apps
        install_ui
        ;;
    apps)
        install_apps
        ;;
    vscode)
        install_vscode
        ;;
    zed)
        install_zed
        ;;
    common)
        install_common
        ;;
    fish)
        install_fish
        ;;
    nvim)
        install_nvim
        ;;
    python)
        install_python
        ;;
    rust)
        install_rust
        ;;
    ui)
        install_ui
        ;;
    *)
        echo "unknown target to install"
        exit 1
        ;;
    esac

    echo "Done"
}

function install_common() {
    echo "Installing common utilities..."
    sudo apt update
    sudo apt install -y build-essential curl direnv fonts-firacode httpie git shellcheck jq tldr fd-find

    sudo snap install ripgrep --classic
    sudo snap alias ripgrep.rg rg
    sudo snap install alacritty

    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash

    mkdir -p ~/.local/bin
    curl -L https://github.com/zellij-org/zellij/releases/latest/download/zellij-x86_64-unknown-linux-musl.tar.gz --output /tmp/zellij.tar.gz
    tar xf /tmp/zellij.tar.gz -C ~/.local/bin

    mkdir -p ~/.config/zellij/
    ln -s "$(pwd)/zellij.kdl" ~/.config/zellij/config.kdl || true

    git clone https://github.com/folke/tokyonight.nvim ~/tokyonight

    ln -s "$(which fdfind)" ~/.local/bin/fd || true

    ln -s "$(pwd)/gitconfig" ~/.gitconfig || true

    mkdir -p ~/.config/alacritty/
    ln -s "$(pwd)/alacritty.toml" ~/.config/alacritty/alacritty.toml || true
}

function install_fish() {
    echo "Installing and configuring the fish shell..."

    sudo apt install -y fish

    chsh -s /usr/bin/fish

    mkdir -p ~/.config/fish
    ln -s "$(pwd)/fish/config.fish" ~/.config/fish/config.fish || true
    ln -s "$(pwd)/fish/fish_prompt.fish" ~/.config/fish/functions/fish_prompt.fish || true

    echo "You should logout to have the fish shell as the default"

}

function install_python() {
    echo "Installing python3..."

    sudo apt install -y python3 python3-pip ipython3

    curl https://pyenv.run | bash

    mkdir -p ~/.ipython/profile_default/startup
    ln -s "$(pwd)/ipython/profile_default/startup/00-autoreload.ipy" ~/.ipython/profile_default/startup/00-autoreload.ipy || true
}

function install_rust() {
    echo "Installing rust..."

    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    rustup update
}

function install_vscode() {
    echo "Installing VSCode..."

    sudo snap install code --classic

    code \
        --install-extension tamasfe.even-better-toml \
        --install-extension lunaryorn.fish-ide \
        --install-extension ms-python.python \
        --install-extension rust-lang.rust \
        --install-extension stkb.rewrap \
        --install-extension timonwong.shellcheck

    mkdir -p ~/.config/Code/User
    ln -s "$(pwd)/code/keybindings.json" ~/.config/Code/User/keybindings.json || true
    ln -s "$(pwd)/code/settings.json" ~/.config/Code/User/settings.json || true
}

function install_zed() {
    echo "Installing Zed..."

    curl -f https://zed.dev/install.sh | sh

    mkdir -p ~/.config/zed
    ln -s "$(pwd)/zed/settings.json" ~/.config/zed/settings.json || true
}

function install_nvim() {
    echo "Installing NeoVim..."

    sudo snap install nvim

    mv ~/.config/nvim ~/.config/nvim.bak || true
    mv ~/.local/share/nvim ~/.local/share/nvim.bak || true
    mv ~/.local/state/nvim ~/.local/state/nvim.bak || true
    mv ~/.cache/nvim ~/.cache/nvim.bak || true

    git clone https://github.com/LazyVim/starter ~/.config/nvim
    rm -rf ~/.config/nvim/.git

    ln -s "$(pwd)/nvim/lua/plugins/mason.lua" ~/.config/nvim/lua/plugins/mason.lua
    ln -s "$(pwd)/nvim/lua/plugins/nvim-treesitter.lua" ~/.config/nvim/lua/plugins/nvim-treesitter.lua

    nvim -c "Mason"
    nvim -c ':checkhealth'
}

function install_apps() {
    echo "Installing miscellaneous apps..."

    sudo snap install slack --classic
    sudo snap install bitwarden spotify
}

function install_ui() {
    echo "customizing ui..."

    sudo apt install numix-gtk-theme
    gsettings set org.gnome.desktop.interface gtk-theme Numix
}

if [ $# -eq 0 ]; then
    echo "Please provide a target to install, use all to install everything"
    exit 1
fi

main "$1"
