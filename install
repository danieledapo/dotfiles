#!/usr/bin/env bash

set -euo pipefail

function main() {
    case $1 in
        all)
            install_common
            install_fish
            install_vscode
            install_python
            install_rust
            install_haskell
            install_nvim
            install_apps
            install_ui
            ;;
        apps)
            install_apps
            ;;
        vscode)
            install_vscode
            ;;
        common)
            install_common
            ;;
        haskell)
            install_haskell
            ;;
        fish)
            install_fish
            ;;
        nvim)
            install_nvim
            ;;
        python)
            install_python
            ;;
        rust)
            install_rust
            ;;
        node)
            install_node
            ;;
        ui)
            install_ui
            ;;
        *)
            echo "unknown target to install"
            exit 1
            ;;
    esac

    echo "Done"
}

function install_common() {
    echo "Installing common utilities..."
    sudo apt update
    sudo apt install -y autojump build-essential byobu curl direnv fonts-firacode httpie git shellcheck jq

    sudo snap install tldr
    sudo snap install ripgrep --classic
    sudo snap alias ripgrep.rg rg

    ln -s "$(pwd)/gitconfig" ~/.gitconfig || true

    # restore gnome terminal config, to update the config run
    # `dconf dump /org/gnome/terminal/ > gnome_terminal.conf`
    dconf load /org/gnome/terminal/ < gnome_terminal.conf
}

function install_fish() {
    echo "Installing and configuring the fish shell..."

    sudo apt install -y fish

    chsh -s /usr/bin/fish

    mkdir -p ~/.config/fish
    ln -s "$(pwd)/fish/config.fish" ~/.config/fish/config.fish || true

    curl -L http://get.oh-my.fish > /tmp/omf.fish
    chmod +x /tmp/omf.fish
    /tmp/omf.fish --noninteractive --yes

    fish -c "omf install https://github.com/d-dorazio/theme-onigiri"
    fish -c "omf theme onigiri"

    ln -s "$(pwd)/fish/functions/monthly-commits" ~/.config/fish/functions/monthly-commits.fish || true
    ln -s "$(pwd)/fish/functions/thought" ~/.config/fish/functions/thought.fish || true

    echo "You should logout to have the fish shell as the default"
}

function install_python() {
    echo "Installing python3..."

    sudo apt install -y python3 python3-pip ipython3

    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash

    pip3 install --user pipenv

    mkdir -p ~/.ipython/profile_default/startup
    ln -s "$(pwd)/ipython/profile_default/startup/00-autoreload.ipy" ~/.ipython/profile_default/startup/00-autoreload.ipy || true
}

function install_rust() {
    echo "Installing rust..."

    curl https://sh.rustup.rs -sSf | sh
    rustup update
    rustup install nightly
    rustup component add rustfmt clippy
}

function install_haskell() {
    echo "Installing haskell..."

    curl -sSL https://get.haskellstack.org/ | sh

    ln -s "$(pwd)/ghci.conf" ~/.ghci
}

function install_vscode() {
    echo "Installing VSCode..."

    sudo snap install code --classic

    code \
        --install-extension bungcip.better-toml \
        --install-extension lunaryorn.fish-ide \
        --install-extension ms-python.python \
        --install-extension rust-lang.rust \
        --install-extension stkb.rewrap \
        --install-extension timonwong.shellcheck

    mkdir -p ~/.config/Code/User
    ln -s "$(pwd)/code/keybindings.json" ~/.config/Code/User/keybindings.json || true
    ln -s "$(pwd)/code/settings.json" ~/.config/Code/User/settings.json || true
}

function install_nvim() {
    echo "Installing NeoVim..."

    sudo add-apt-repository -y ppa:neovim-ppa/stable
    sudo apt update
    sudo apt install -y neovim

    mkdir -p "$HOME/.config/nvim"
    ln -f -s "$(realpath init.vim)" "$HOME/.config/nvim"

    if [ ! -d "$HOME/.pyenv/versions/neovim2" ]; then
        pyenv virtualenv --python=python2 neovim2
    fi

    if [ ! -d "$HOME/.pyenv/versions/neovim3" ]; then
        pyenv virtualenv --python=python3 neovim3
    fi

    # virtualenv activate script sucks and it's full of errors...
    set +u
    # shellcheck source=/dev/null
    source "$HOME/.pyenv/versions/neovim2/bin/activate" && pip install neovim && deactivate
    # shellcheck source=/dev/null
    source "$HOME/.pyenv/versions/neovim3/bin/activate" && pip install neovim && deactivate
    set -u

    nvim -c 'PlugInstall --sync' -c 'qa'
    nvim -c ':CheckHealth'
}

function install_apps() {
    echo "Installing miscellaneous apps..."

    sudo snap install slack --classic
    sudo snap install bitwarden spotify
}


function install_node() {
    echo "Installing node..."

    # node 16
    curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -

    # yarn
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

    sudo apt update && sudo apt install -y nodejs yarn
}


function install_ui() {
    echo "customizing ui..."

    sudo apt install numix-gtk-theme
    gsettings set org.gnome.desktop.interface gtk-theme Numix
}

if [ $# -eq 0 ]
    then
    echo "Please provide a target to install, use all to install everything"
    exit 1
fi

main "$1"
